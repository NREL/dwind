[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "dwind"
dynamic = ["version"]
authors = [
    {name = "Jane Lockshin", email = "jane.lockshin@nrel.gov"},
    {name = "Paritosh Das", email = "paritosh.das@nrel.gov"},
    {name = "Rob Hammond", email = "rob.hammond@nrel.gov"},
]
readme = "README.md"
description = "Distributed Wind Generation Model"
requires-python = ">=3.11"
license = {file = "LICENSE"}
dependencies = [
    "nrel-rex",
    "numpy",
    "pandas>=2",
    "sqlalchemy",
    "psycopg2",
    "scipy",
    "matplotlib",
    "seaborn",
    "pyarrow==17",
    "fastparquet",
    "h5pyd",
    "typer",
    "tomli >= 1.1.0 ; python_version < '3.11'",
]
keywords = [
    "python3",
    "wind-energy",
    "distributed-wind",
    "energy-production",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    # "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

[project.scripts]
dwind = "dwind.run:app"

[project.urls]
source = "https://github.com/NREL/dwind"
issues = "https://github.com/NREL/dwind/issues"
# documentation = "https://nrel.github.io/dwind/"
# changelog = "https://github.com/NREL/dwind/blob/main/CHANGELOG.md"

# TODO
[project.optional-dependencies]
dev = [
    "pre-commit",
    "isort",
    "ruff",
    "pytest",
    "pytest-cov",
]

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ["dwind", "*.yaml", "*.csv"]
exclude = [
    "*.tests",
    "*.tests.*",
    "tests.*",
    "tests",
]

[tool.setuptools.dynamic]
version = {attr = "dwind.__version__"}

[tool.isort]
skip = [
  "dwind/__init__.py",
]
multi_line_output = 3
sections = [
  "FUTURE",
  "STDLIB",
  "THIRDPARTY",
  "FIRSTPARTY",
  "LOCALFOLDER",
]
known_first_party = "dwind"
known_local_folder = "tests"
combine_as_imports = true
force_grid_wrap = 0
include_trailing_comma = true
use_parentheses = true
length_sort = true
lines_after_imports = 2
line_length = 100


[tool.ruff]
src = ["dwind"]
line-length = 100
target-version = "py311"
ignore-init-module-imports = true

# See https://github.com/charliermarsh/ruff#supported-rules
# for rules included and matching to prefix.
select = ["F", "E", "W", "C4", "UP", "B", "A", "PTH", "PERF", "FURB", "NPY", "Q", "RUF"] # , "D"

# D205: not using summary lines and descriptions, just descriptions
# D401: don't believe enough in imperative mode to make all the changes currently
ignore = ["D205", "D401"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["F", "E", "W", "C4", "D", "UP"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.per-file-ignores]
"*/__init__.py" = ["D104", "F401"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true
