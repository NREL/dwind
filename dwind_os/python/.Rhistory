theme(legend.key=element_blank()) +
theme(axis.line = element_line(colour =  ggthemes_data$fivethirtyeight["dkgray"], size = 1)) +
theme(panel.grid.major = element_line(colour = "light grey")) +
theme(panel.background = element_rect(fill = "white")) +
theme(legend.background = element_rect(fill = alpha('white', 0.5)))
ggplot(d2_market, aes(x = year))+
geom_line(aes(y = nat_market_share*100), size = 1)+
geom_line(aes(y = market_share_capacity*100), size = 1)+
theme_custom+
facet_wrap(~sector_abbr, labeller = as_labeller(facet_names))+
theme(strip.background = element_rect(fill = NA))+
theme(strip.text = element_text(size = rel(1.0), face = "bold"))+
scale_x_continuous("Year")+
scale_y_continuous("GHP Market Share (%)")+
theme(legend.position = c(0.23,.88))+
guides(linetype=F)+
scale_color_manual("",values = c(colors));
colors = brewer.pal(4, "Spectral")
ggplot(d2_market, aes(x = year))+
geom_line(aes(y = nat_market_share*100), size = 1)+
geom_line(aes(y = market_share_capacity*100), size = 1)+
theme_custom+
facet_wrap(~sector_abbr, labeller = as_labeller(facet_names))+
theme(strip.background = element_rect(fill = NA))+
theme(strip.text = element_text(size = rel(1.0), face = "bold"))+
scale_x_continuous("Year")+
scale_y_continuous("GHP Market Share (%)")+
theme(legend.position = c(0.23,.88))+
guides(linetype=F)+
scale_color_manual("",values = c(colors));
d2_market = read.csv('/Users/kmccabe/temp.csv', stringsAsFactors = F)
d2_market$color_type = 0
ggplot(d2_market, aes(x = year)+
geom_line(aes(y = nat_market_share*100), size = 1)+
geom_line(aes(y = market_share_capacity*100), size = 1)+
theme_custom+
facet_wrap(~sector_abbr, labeller = as_labeller(facet_names))+
theme(strip.background = element_rect(fill = NA))+
theme(strip.text = element_text(size = rel(1.0), face = "bold"))+
scale_x_continuous("Year")+
scale_y_continuous("GHP Market Share (%)")+
theme(legend.position = c(0.23,.88))+
guides(linetype=F)+
scale_color_manual("",values = c(colors));
ggplot(d2_market, aes(x = year))+
geom_line(aes(y = nat_market_share*100), size = 1)+
geom_line(aes(y = market_share_capacity*100), size = 1)+
theme_custom+
facet_wrap(~sector_abbr, labeller = as_labeller(facet_names))+
theme(strip.background = element_rect(fill = NA))+
theme(strip.text = element_text(size = rel(1.0), face = "bold"))+
scale_x_continuous("Year")+
scale_y_continuous("GHP Market Share (%)")+
theme(legend.position = c(0.23,.88))+
guides(linetype=F)+
scale_color_manual("",values = c(colors));
ggplot(d2_market, aes(x = year))+
geom_line(aes(y = nat_market_share*100), size = 1)+
geom_line(aes(y = market_share_capacity*100), size = 1)+
theme_custom+
facet_wrap(~sector_abbr, labeller = as_labeller(facet_names))+
theme(strip.background = element_rect(fill = NA))+
theme(strip.text = element_text(size = rel(1.0), face = "bold"))+
scale_x_continuous("Year")+
scale_y_continuous("GHP Market Share (%)")+
theme(legend.position = c(0.23,.88))+
guides(linetype=F);+
scale_color_manual("",values = c(colors));
ggplot(d2_market, aes(x = year))+
geom_line(aes(y = nat_market_share*100), size = 1)+
geom_line(aes(y = market_share_capacity*100), size = 1)+
theme_custom+
facet_wrap(~sector_abbr, labeller = as_labeller(facet_names))+
theme(strip.background = element_rect(fill = NA))+
theme(strip.text = element_text(size = rel(1.0), face = "bold"))+
scale_x_continuous("Year")+
scale_y_continuous("GHP Market Share (%)")+
theme(legend.position = c(0.23,.88))+
guides(linetype=F);
ggplot(d2_market, aes(x = year))+
geom_line(aes(y = nat_market_share*100, color = colors[1]), size = 1)+
geom_line(aes(y = market_share_capacity*100, color = colors[4]), size = 1)+
theme_custom+
facet_wrap(~sector_abbr, labeller = as_labeller(facet_names))+
theme(strip.background = element_rect(fill = NA))+
theme(strip.text = element_text(size = rel(1.0), face = "bold"))+
scale_x_continuous("Year")+
scale_y_continuous("GHP Market Share (%)")+
theme(legend.position = c(0.23,.88))+
guides(linetype=F);
ggplot(d2_market, aes(x = year))+
geom_line(aes(y = nat_market_share*100, color = colors[1]), size = 1)+
geom_line(aes(y = market_share_capacity*100, color = colors[4]), size = 1)+
theme_custom+
facet_wrap(~sector_abbr, labeller = as_labeller(facet_names))+
theme(strip.background = element_rect(fill = NA))+
theme(strip.text = element_text(size = rel(1.0), face = "bold"))+
scale_x_continuous("Year")+
scale_y_continuous("GHP Market Share (%)")+
theme(legend.position = c(0.23,.88))+
guides(linetype=F)+
scale_color_manual("",values = c(colors[1], colors[4]));
which_quantile = function(numarr, probs, na.rm = T){
if (! na.rm & any(is.na(numarr)))
return (rep(NA_integer_, length(probs)))
o = order(numarr)
n = sum(!is.na(numarr))
o = o[seq_len(n)]
nppm = n * probs - 0.5
j = floor(nppm)
h = ifelse((nppm == j) & ((j%%2L) == 0L), 0, 1)
j = j + h
j[j == 0] = 1
return(o[j])
}
which_quantile(c(2,3,4,5,6), 0.5)
x <-c (2.34, 5.83, NA, 9.34, 8.53, 6.42, NA, 8.07, NA, 0.77)
x[!is.na(x)]
numarr=c(1,2,3,4,5)
probs = 0.5
o = order(numarr)
n = sum(!is.na(numarr))
o = o[seq_len(n)]
?seq_len
nppm = n*probs - 0.5
j = floor(nppm)
h = ifelse((nppm==j)&((j%%2L)==0L), 0, 1)
?quantile
quantile(numarr)
quantile(numarr, 0.5)
quantile(numarr, 0.5, type = 1)
numarr = c(1,2,3,4)
quantile(numarr, 0.5, type = 1)
quantile(numarr, 0.5, type = 7)
df = read.csv('/Users/kmccabe/dGeo/Data/Impacts_Data/DU/1_ref_bau_lcoh.csv', stringsAsFactors = F)
library(ggplot2);
library(dplyr);
library(RColorBrewer);
library(reshape2);
library(RPostgreSQL)
library(jsonlite)
library(ggthemes)
library(tidyr)
library(grid)
df2 = group_by(df, water_heat_equip, water_heat_fuel) %>%
summarise(n = n())
View(df2)
df2 = group_by(df, sector_abbr, water_heat_equip, water_heat_fuel) %>%
summarise(n = n())
library(RPostgreSQL)
library(jsonlite)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(tidyr)
library(grid)
library(reshape2)
library(RColorBrewer)
theme_custom =    #theme(panel.grid.minor = element_blank()) +
theme(text = element_text(colour = ggthemes_data$fivethirtyeight["dkgray"])) +
theme(plot.margin = unit(c(0.2, 0.2, 0.2, 0.2), "lines")) +
theme(axis.title = element_text(size = rel(1.25), face = 'bold')) +
theme(axis.title.x = element_text(vjust = 0.1)) +
theme(axis.title.y = element_text(vjust = 1.1)) +
theme(axis.text.y = element_text(size = rel(1.2))) +
theme(axis.text.x = element_text(size = rel(1.2))) +
theme(plot.title = element_text(size = rel(1.5), face = "bold")) +
theme(legend.text = element_text(size = rel(1))) +
#theme(legend.title=element_blank()) +
theme(legend.key=element_blank()) +
theme(axis.line = element_line(colour =  ggthemes_data$fivethirtyeight["dkgray"], size = 1)) +
theme(panel.grid.major = element_line(colour = "light grey")) +
theme(panel.background = element_rect(fill = "white")) +
theme(legend.background = element_rect(fill = alpha('white', 0.5)))
scen_df = read.csv('/Users/kmccabe/dGeo/R/_final/du_final_scen_df.csv', stringsAsFactors = F)
tech_df = read.csv('/Users/kmccabe/dGeo/Graphics/DU/_data/tech_potential_df_20170517.csv', stringsAsFactors = F)
econ_df = read.csv('/Users/kmccabe/dGeo/Graphics/DU/_data/econ_potential_df_20170517.csv', stringsAsFactors = F)
market_df = read.csv('/Users/kmccabe/dGeo/Graphics/DU/_data/market_potential_df_20170517.csv', stringsAsFactors = F)
# Convert total_nameplate_capacity_mw to plant_nameplate_capacity_mw based on scenario-specific ratios
# BAU columns
for (i in c(1,3,5)) {
econ_df[,i] = econ_df[,i] * 0.51
market_df[,i] = market_df[,i] * 0.51
}
# Improved columns
for (i in c(2,4,6)) {
econ_df[,i] = econ_df[,i] * 0.56
market_df[,i] = market_df[,i] * 0.56
}
View(econ_df)
View(market_df)
Sys.glob('/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/csvs/', '*.csv')
Sys.glob('/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/csvs', '*.csv')
Sys.glob('/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/csvs/*.csv')
state_csvs = Sys.glob('/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/csvs/*.csv')
df = read.csv(state_csvs[1])
View(df)
df[!df$tech,]
View(df)
df[,!df$tech]
df[,!(colnames(df) == 'tech')]
length('/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/csvs/')
nchar('/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/csvs/')
source('~/dSolar/R/summarize_scenario_capacities.R', echo=TRUE)
source('~/dSolar/R/summarize_scenario_capacities.R', echo=TRUE)
source('~/dSolar/R/summarize_scenario_capacities.R', echo=TRUE)
?rbind
?rbind
source('~/dSolar/R/summarize_scenario_capacities.R', echo=TRUE)
View(final_summary)
source('~/dSolar/R/summarize_scenario_capacities.R', echo=TRUE)
View(final_summary)
strsplit(scen, ".")
strsplit(scen, "\.")
strsplit(scen, "_")
strsplit(scen, ".")
strsplit(scen, ".", fixed = T)
strsplit(scen, ".", fixed = T)[1]
strsplit(scen, ".", fixed = T)[1][1]
strsplit(scen, ".", fixed = T)[[1]]
strsplit(scen, ".", fixed = T)[[1]][1]
source('~/dSolar/R/summarize_scenario_capacities.R', echo=TRUE)
View(final_summary)
View(final_summary)
length(final_summary)
ncol(final_summary)
source('~/dSolar/R/summarize_scenario_capacities.R', echo=TRUE)
View(final_summary)
source('~/dSolar/R/summarize_scenario_capacities.R', echo=TRUE)
View(final_summary)
1:(ncol(final_summary)-1)
source('~/dSolar/R/summarize_scenario_capacities.R', echo=TRUE)
View(final_summary)
View(df)
source('~/dSolar/R/summarize_scenario_capacities.R', echo=TRUE)
View(df)
View(final_summary)
?order
source('~/dSolar/R/summarize_scenario_capacities.R', echo=TRUE)
View(final_summary)
source('~/dSolar/R/summarize_scenario_capacities.R', echo=TRUE)
source('~/dSolar/R/summarize_scenario_capacities.R', echo=TRUE)
library(plyr, quietly = T)
library(reshape2, quietly = T)
# library(tidyr)
library (dplyr, q
library (dplyr, quietly = T, warn.conflicts = F)
state_csvs = Sys.glob('/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/csvs/*.csv')
library (dplyr, quietly = T, warn.conflicts = F)
state_csvs = Sys.glob('/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/by_state/csvs/*.csv')
for (state_csv in state_csvs) {
df = read.csv(state_csv, check.names = F)
# state = substr(state_csv, )
}
View(df)
state_csv
nchar('/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/by_state/csvs/19_Mid_Case_')
View(df)
state_csvs = Sys.glob('/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/by_state/csvs/*.csv')
final_summary = data.frame()
state_csvs = Sys.glob('/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/by_state/csvs/*.csv')
final_summary = data.frame()
for (state_csv in state_csvs) {
df = read.csv(state_csv, check.names = F)
state = substr(state_csv, 103, 200)
# write.csv(df[2, !(colnames(df) == 'tech')], sprintf('/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/by_state/csvs/final_csvs/%s', state), row.names = F)
final_summary = rbind(final_summary, df[2,])
}
View(final_summary)
final_summary = final_summary[with(final_summary, order(State)), ]
View(final_summary)
state_csvs = Sys.glob('/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/by_state/csvs/*.csv')
final_summary = data.frame()
for (state_csv in state_csvs) {
df = read.csv(state_csv, check.names = F)
state = substr(state_csv, 103, 200)
final_summary = rbind(final_summary, df[2,])
}
View(final_summary)
final_summary = final_summary[with(final_summary, order(State)), ]
View(final_summary)
state_csvs = Sys.glob('/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/by_state/csvs/*.csv')
final_summary = data.frame()
for (state_csv in state_csvs) {
df = read.csv(state_csv, check.names = F)
state = substr(state_csv, 103, 200)
final_summary = rbind(final_summary, df[2,])
}
final_summary = final_summary[with(final_summary, order(State)), ]
write.csv(final_summary[, !(colnames(df) == 'tech')], '/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/by_state/csvs/final_csvs/19_Mid_Case_10agent.csv', row.names = F)
scen_names = Sys.glob('/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/dpv_cf_and_MW_results/*')
scen_names
nchar("/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/dpv_cf_and_MW_results/2_qwer")
substr("/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/dpv_cf_and_MW_results/2_qwer",100,200)
substr("/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/dpv_cf_and_MW_results/2_qwer",100,20)
substr("/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/dpv_cf_and_MW_results/2_qwer",100,20)
substr("/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/dpv_cf_and_MW_results/2_qwer",100,105)
substr("/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/dpv_cf_and_MW_results/2_qwer",101,105)
library(plyr, quietly = T)
library(reshape2, quietly = T)
# library(tidyr)
library (dplyr, quietly = T, warn.conflicts = F)
state_csvs = Sys.glob('/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/csvs/*.csv')
final_summary = data.frame()
for (state_csv in state_csvs) {
df = read.csv(state_csv, check.names = F)
scen = substr(state_csv, 83, 200)
write.csv(df[,!(colnames(df) == 'tech')], sprintf('/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/csvs/final_csvs/%s', scen), row.names = F)
df$scenario = strsplit(scen, ".", fixed = T)[[1]][1]
final_summary = rbind(final_summary, df[1,])
}
final_summary = final_summary[, c(22, 1:21)]
final_summary = final_summary[with(final_summary, order(scenario)), ]
write.csv(final_summary, '/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/csvs/final_csvs/scenario_summary.csv', row.names = F)
regexpr
?regexpr
asdf = scen_names[1]
scen_names = Sys.glob('/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/dpv_cf_and_MW_results/*')
asdf = scen_names[1]
asdf
regexpr("SS17", asdf)
substr(asdf,103)
substr(asdf,103,200)
gsub('SS17', 'StScen2017', asdf)
scen_names = Sys.glob('/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/dpv_cf_and_MW_results/*')
asdf = scen_names[27]
asdf
scen_names
asdf = scen_names[14]
asdf
file.rename(asdf, gsub('SS17', 'StScen2017', asdf))
scen_names = c("/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/dpv_cf_and_MW_results/222_SS17_asdf",
"/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/dpv_cf_and_MW_results/223_SS17_qwer")
for (scen in scen_names) {
file1 = paste0(scen,'/dpv_cf_by_ba_ts.csv')
dpv1 = read.csv(file1, check.names = F)
dpv1[1,1] = ""
write.csv(dpv1, paste0(scen,'/distPVCF',substr(scen,101,200),'.csv'), row.names = F)
file.remove(file1)
file2 = paste0(scen,'/dpv_cf_by_ba.csv')
dpv2 = read.csv(file2, check.names = F)
dpv2[1,1] = ""
write.csv(dpv2, paste0(scen,'/distPVCF_hourly',substr(scen,101,200),'.csv'), row.names = F)
file.remove(file2)
file3 = paste0(scen,'/dpv_MW_by_ba_and_year.csv')
dpv3 = read.csv(file3, check.names = F)
dpv3[1,1] = ""
write.csv(dpv3, paste0(scen,'/distPVcap',substr(scen,101,200),'.csv'), row.names = F)
file.remove(file3)
file.rename(scen,gsub('SS17', 'StScen2017', scen))
}
View(dpv1)
colnames(dpv1)[1] = ""
View(dpv1)
scen_names = c("/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/dpv_cf_and_MW_results/222_SS17_asdf",
"/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/dpv_cf_and_MW_results/223_SS17_qwer")
for (scen in scen_names) {
file1 = paste0(scen,'/dpv_cf_by_ba_ts.csv')
dpv1 = read.csv(file1, check.names = F)
colnames(dpv1)[1] = ""
write.csv(dpv1, paste0(scen,'/distPVCF',substr(scen,101,200),'.csv'), row.names = F)
file.remove(file1)
file2 = paste0(scen,'/dpv_cf_by_ba.csv')
dpv2 = read.csv(file2, check.names = F)
colnames(dpv2)[1] = ""
write.csv(dpv2, paste0(scen,'/distPVCF_hourly',substr(scen,101,200),'.csv'), row.names = F)
file.remove(file2)
file3 = paste0(scen,'/dpv_MW_by_ba_and_year.csv')
dpv3 = read.csv(file3, check.names = F)
colnames(dpv3)[1] = ""
write.csv(dpv3, paste0(scen,'/distPVcap',substr(scen,101,200),'.csv'), row.names = F)
file.remove(file3)
file.rename(scen,gsub('SS17', 'StScen2017', scen))
}
scen_names = Sys.glob('/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/dpv_cf_and_MW_results/*')
# scen_names = c("/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/dpv_cf_and_MW_results/222_SS17_asdf",
#                "/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/dpv_cf_and_MW_results/223_SS17_qwer")
for (scen in scen_names) {
file1 = paste0(scen,'/dpv_cf_by_ba_ts.csv')
dpv1 = read.csv(file1, check.names = F)
colnames(dpv1)[1] = ""
write.csv(dpv1, paste0(scen,'/distPVCF',substr(scen,101,200),'.csv'), row.names = F)
file.remove(file1)
file2 = paste0(scen,'/dpv_cf_by_ba.csv')
dpv2 = read.csv(file2, check.names = F)
colnames(dpv2)[1] = ""
write.csv(dpv2, paste0(scen,'/distPVCF_hourly',substr(scen,101,200),'.csv'), row.names = F)
file.remove(file2)
file3 = paste0(scen,'/dpv_MW_by_ba_and_year.csv')
dpv3 = read.csv(file3, check.names = F)
colnames(dpv3)[1] = ""
write.csv(dpv3, paste0(scen,'/distPVcap',substr(scen,101,200),'.csv'), row.names = F)
file.remove(file3)
file.rename(scen,gsub('SS17', 'StScen2017', scen))
}
substr(scen,101,200)
scen
scen = scen_names[1]
substr(scen,101,200)
regexpr('SS17',scen)
regexpr('SS17',scen)[1]
substr(regexpr('SS17',scen)[1],101,200)
substr(scen, regexpr('SS17', scen)[1], 200)
substr(scen, regexpr('SS17', scen)[1] + 4, 200)
scen_names = Sys.glob('/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/dpv_cf_and_MW_results/*')
# scen_names = c("/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/dpv_cf_and_MW_results/222_SS17_asdf",
#                "/Users/kmccabe/Projects/standard_scenarios/diffusion/runs/standard_scenarios/dpv_cf_and_MW_results/223_SS17_qwer")
for (scen in scen_names) {
file1 = paste0(scen,'/dpv_cf_by_ba_ts.csv')
dpv1 = read.csv(file1, check.names = F)
colnames(dpv1)[1] = ""
write.csv(dpv1, paste0(scen,'/distPVCF',substr(scen, regexpr('SS17', scen)[1] + 4, 200),'.csv'), row.names = F)
file.remove(file1)
file2 = paste0(scen,'/dpv_cf_by_ba.csv')
dpv2 = read.csv(file2, check.names = F)
colnames(dpv2)[1] = ""
write.csv(dpv2, paste0(scen,'/distPVCF_hourly',substr(scen, regexpr('SS17', scen)[1] + 4, 200),'.csv'), row.names = F)
file.remove(file2)
file3 = paste0(scen,'/dpv_MW_by_ba_and_year.csv')
dpv3 = read.csv(file3, check.names = F)
colnames(dpv3)[1] = ""
write.csv(dpv3, paste0(scen,'/distPVcap',substr(scen, regexpr('SS17', scen)[1] + 4, 200),'.csv'), row.names = F)
file.remove(file3)
file.rename(scen,gsub('SS17', 'StScen2017', scen))
}
df = read.csv('/Users/kmccabe/dGeo/Data/Impacts_Data/GHP/ghp_2_nav_ref_bau_both.csv', stringsAsFactors = F, check.names = F)
View(df)
df = read.csv('/Users/kmccabe/dGeo/Data/Impacts_Data/GHP/ghp_2_nav_ref_bau_both.csv', stringsAsFactors = F, check.names = F)
library(plyr, quietly = T)
library(reshape2, quietly = T)
# library(tidyr)
library (dplyr, quietly = T, warn.conflicts = F)
View(df)
df2 = group_by(df, year) %>%
summarise(baseline_init_natgas = sum(baseline_init_natgas_kwh), baseline_init_elec = sum(baseline_init_elec_kwh), baseline_init_propane = sum(baseline_init_propane_kwh), baseline_init_fuel_oil = sum(baseline_init_fuel_oil_kwh))
View(df2)
df3 = group_by(df, year) %>%
summarise(natgas = sum())
View(df3)
df = read.csv('/Users/kmccabe/dGeo/Data/Impacts_Data/GHP/ghp_2_test.csv', stringsAsFactors = F, check.names = F)
library(plyr, quietly = T)
library(reshape2, quietly = T)
# library(tidyr)
library (dplyr, quietly = T, warn.conflicts = F)
View(df)
df2 = group_by(df, year) %>%
summarise(baseline_init_natgas = sum(baseline_init_natgas_kwh), baseline_init_elec = sum(baseline_init_elec_kwh), baseline_init_propane = sum(baseline_init_propane_kwh), baseline_init_fuel_oil = sum(baseline_init_fuel_oil_kwh))
View(df2)
before = read.csv('/Users/kmccabe/dGeo/Data/Impacts_Data/GHP/ghp_2_nav_ref_bau_both.csv', stringsAsFactors = F, check.names = F)
before2 = group_by(before, year) %>%
summarise(baseline_init_natgas = sum(baseline_init_natgas_kwh), baseline_init_elec = sum(baseline_init_elec_kwh), baseline_init_propane = sum(baseline_init_propane_kwh), baseline_init_fuel_oil = sum(baseline_init_fuel_oil_kwh))
View(before2)
df3 = group_by(df, year) %>%
summarise(baseline_natgas = sum(baseline_site_natgas_kwh + ghp_site_natgas_kwh), baseline_elec = sum(baseline_site_elec_kwh+ghp_site_elec_kwh), baseline_propane = sum(baseline_site_propane_kwh + ghp_site_propane_kwh), baseline_fuel_oil = sum(baseline_site_fuel_oil_kwh + ghp_site_fuel_oil_kwh))
View(df3)
before = read.csv('/Users/kmccabe/dGeo/Data/Impacts_Data/GHP/ghp_2_nav_ref_bau_both.csv', stringsAsFactors = F, check.names = F)
before2 = group_by(before, year) %>%
summarise(baseline_init_natgas = sum(baseline_init_natgas_kwh), baseline_init_elec = sum(baseline_init_elec_kwh), baseline_init_propane = sum(baseline_init_propane_kwh), baseline_init_fuel_oil = sum(baseline_init_fuel_oil_kwh))
library(plyr, quietly = T)
library(reshape2, quietly = T)
# library(tidyr)
library (dplyr, quietly = T, warn.conflicts = F)
summarise(baseline_init_natgas = sum(baseline_init_natgas_kwh), baseline_init_elec = sum(baseline_init_elec_kwh), baseline_init_propane = sum(baseline_init_propane_kwh), baseline_init_fuel_oil = sum(baseline_init_fuel_oil_kwh))
before2 = group_by(before, year) %>%
summarise(baseline_init_natgas = sum(baseline_init_natgas_kwh), baseline_init_elec = sum(baseline_init_elec_kwh), baseline_init_propane = sum(baseline_init_propane_kwh), baseline_init_fuel_oil = sum(baseline_init_fuel_oil_kwh))
View(before)
View(before2)
df = read.csv('/Users/kmccabe/dGeo/Data/Impacts_Data/GHP/ghp_test_2.csv', stringsAsFactors = F, check.names = F)
df2 = group_by(df, year) %>%
summarise(baseline_init_natgas = sum(baseline_init_natgas_kwh), baseline_init_elec = sum(baseline_init_elec_kwh), baseline_init_propane = sum(baseline_init_propane_kwh), baseline_init_fuel_oil = sum(baseline_init_fuel_oil_kwh))
df3 = group_by(df, year) %>%
summarise(baseline_natgas = sum(baseline_site_natgas_kwh + ghp_site_natgas_kwh), baseline_elec = sum(baseline_site_elec_kwh+ghp_site_elec_kwh), baseline_propane = sum(baseline_site_propane_kwh + ghp_site_propane_kwh), baseline_fuel_oil = sum(baseline_site_fuel_oil_kwh + ghp_site_fuel_oil_kwh))
View(df3)
df4 = group_by(df, year) %>%
View(before2)
library(reshape2, quietly = T)
library(plyr, quietly = T)
library(reshape2, quietly = T)
# library(tidyr)
library (dplyr, quietly = T, warn.conflicts = F)
sg = read.csv('/Users/kmccabe/check_Navigant_low_fuel_by_year_by_fuelType_SJ_20170707.csv', check.names = F, stringsAsFactors = F)
View(sg)
?recast
View(sg)
?dcast
sg2 = dcast(sg, year~space_heat_fuel)
View(sg2)
sg2 = dcast(sg, year~space_heat_fuel, value.var = c('baseline_fuel_total_kwh', 'max_baseline_fuel_total_kwh', 'fuel_reduction_total_kwh'))
View(sg2)
sg2 = dcast(sg, year~space_heat_fuel, value.var = baseline_fuel_total_kwh)
sg2 = dcast(sg, year~space_heat_fuel, value.var = 'baseline_fuel_total_kwh')
View(sg2)
sg_baseline = dcast(sg, year~space_heat_fuel, value.var = 'baseline_fuel_total_kwh')
sg_max = dcast(sg, year~space_heat_fuel, value.var = 'max_baseline_fuel_total_kwh')
sg_reduction = dcast(sg, year~space_heat_fuel, value.var = 'fuel_reduction_total_kwh')
rm(sg2)
df = read.csv('/Users/kmccabe/dGeo/Data/Impacts_Data/GHP/ghp_test_2.csv', stringsAsFactors = F, check.names = F)
df2 = group_by(df, year) %
df2 = group_by(df, year) %>%
summarise(baseline_init_natgas = sum(baseline_init_natgas_kwh), baseline_init_elec = sum(baseline_init_elec_kwh), baseline_init_propane = sum(baseline_init_propane_kwh), baseline_init_fuel_oil = sum(baseline_init_fuel_oil_kwh))
View(df2)
View(sg_baseline)
old = read.csv('/Users/kmccabe/dGeo/Data/Impacts_Data/GHP/ghp_2_test.csv', stringsAsFactors = F, check.names = F)
old2 = group_by(old, year) %>%
summarise(baseline_init_natgas = sum(baseline_init_natgas_kwh), baseline_init_elec = sum(baseline_init_elec_kwh), baseline_init_propane = sum(baseline_init_propane_kwh), baseline_init_fuel_oil = sum(baseline_init_fuel_oil_kwh))
View(old2)
View(sg_max)
old = read.csv('/Users/kmccabe/dGeo/Data/Impacts_Data/GHP/ghp_2_nav_ref_bau_both.csv', stringsAsFactors = F, check.names = F)
old2 = group_by(old, year) %>%
summarise(baseline_init_natgas = sum(baseline_init_natgas_kwh), baseline_init_elec = sum(baseline_init_elec_kwh), baseline_init_propane = sum(baseline_init_propane_kwh), baseline_init_fuel_oil = sum(baseline_init_fuel_oil_kwh))
View(old2)
source('~/dSolar/R/plot_outputs_multi.R', echo=TRUE)
